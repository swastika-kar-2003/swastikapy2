name: cicd

on:
  push:
    paths:
      - 'src/**'
    branches:
      - main

jobs:
  ci:

    runs-on: ubuntu-latest
    steps:
      -
        name: Shortening the commit id
        shell: bash
        run : |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: swaskar03/swastikapy2:${{env.COMMIT_ID}}
    outputs: 
      commit_id: ${{env.COMMIT_ID}}
  cd:
    needs: ci
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v3

      - name: Modify values file
        shell: bash
        run: |
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/swastikapy2/values-prod.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates values.yaml with commit ${{needs.ci.outputs.commit_id}}'

      - name: Install argocd
        shell: bash
        run: |
          curl -ksSL -o argocd https://argocd-server.argocd/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd

      - name: argocd login
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ secrets.ARGOCD_PASSWORD }}

      - name: Ensure argocd repo and app
        shell: bash
        run: |

          # Connects the argocd repo
          repo="https://github.com/swastika-kar-2003/swastikapy2.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          # Creates the argocd app
          argocd app get swastikapy2 || argocd app create swastikapy2 \
            --repo $repo \
            --path charts/swastikapy2 \
            --dest-namespace prod \
            --dest-server https://kubernetes.default.svc \
            --values values-prod.yaml \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: Argocd app sync
        shell: bash
        run: |
          argocd app sync swastikapy2
          argocd app wait swastikapy2 --timeout 180
  